using System.Globalization;
using System.Resources;
using System.Windows;
using System.IO;

namespace takip.Services
{
    /// <summary>
    /// Dil yerelle≈ütirme servisi - √ßok dilli destek i√ßin
    /// </summary>
    public class LocalizationService
    {
        private static LocalizationService? _instance;
        private static readonly object _lock = new object();
        
        private ResourceManager? _resourceManager;
        private CultureInfo _currentCulture;
        private Dictionary<string, Dictionary<string, string>> _translations = null!;
        
        /// <summary>
        /// Dil deƒüi≈üikliƒüi olayƒ±
        /// </summary>
        public event EventHandler<CultureInfo>? LanguageChanged;
        
        /// <summary>
        /// Tekil √∂rnek (Singleton)
        /// </summary>
        public static LocalizationService Instance
        {
            get
            {
                if (_instance == null)
                {
                    lock (_lock)
                    {
                        _instance ??= new LocalizationService();
                    }
                }
                return _instance;
            }
        }
        
        /// <summary>
        /// Mevcut dil
        /// </summary>
        public CultureInfo CurrentCulture => _currentCulture;
        
        /// <summary>
        /// Mevcut dil (string olarak)
        /// </summary>
        public string CurrentLanguage => _currentCulture.Name;
        
        /// <summary>
        /// Desteklenen diller
        /// </summary>
        public List<CultureInfo> SupportedCultures { get; private set; }
        
        private LocalizationService()
        {
            // Desteklenen dilleri tanƒ±mla
            SupportedCultures = new List<CultureInfo>
            {
                new CultureInfo("tr-TR"), // T√ºrk√ße
                new CultureInfo("en-US")  // ƒ∞ngilizce
            };
            
            // Varsayƒ±lan dil: ƒ∞ngilizce
            _currentCulture = new CultureInfo("en-US");
            
            // √áevirileri y√ºkle
            LoadTranslations();
            
            // Kaynak dosyasƒ±nƒ± y√ºkle
            LoadResourceManager();
        }
        
        /// <summary>
        /// √áevirileri y√ºkle (Dictionary tabanlƒ±)
        /// </summary>
        private void LoadTranslations()
        {
            _translations = new Dictionary<string, Dictionary<string, string>>
            {
                ["tr-TR"] = new Dictionary<string, string>
                {
                    ["MainWindow.Title"] = "√úretim Takip Sistemi",
                    ["MainWindow.ShiftManagement"] = "Vardiya Y√∂netimi",
                    ["MainWindow.ProductionInfo"] = "√úretim Bilgileri",
                    ["MainWindow.StartShift"] = "Vardiyayƒ± Ba≈ülat",
                    ["MainWindow.EndShift"] = "Vardiyayƒ± Bitir",
                    ["MainWindow.ShiftHistory"] = "Vardiya Ge√ßmi≈üi",
                    ["MainWindow.PlcTest"] = "üîß PLC Test Sayfasƒ±",
                    ["MainWindow.TotalProduction"] = "Toplam √úretim",
                    ["MainWindow.Logs"] = "Loglar",
                    ["MainWindow.DailyPalletProduction"] = "G√ºnl√ºk Palet √úretimi",
                    ["MainWindow.ShiftStart"] = "Vardiya Ba≈ülangƒ±√ß",
                    ["MainWindow.ProductionStart"] = "√úretim Ba≈ülangƒ±√ß",
                    ["MainWindow.NotStarted"] = "Ba≈ülatƒ±lmadƒ±",
                    ["MainWindow.Pallet"] = "palet",
                    ["MainWindow.Add"] = "Ekle",
                    ["MainWindow.Delete"] = "Sil",
                    ["MainWindow.PlcStatus"] = "PLC: Baƒülantƒ± Kontrol Ediliyor...",
                    ["MainWindow.PlcConnected"] = "PLC: Baƒülƒ±",
                    ["MainWindow.PlcDisconnected"] = "PLC: Baƒülantƒ± Yok",
                    ["MainWindow.PlcError"] = "PLC: Hata",
                    
                    // Mold Management
                    ["MoldManagement.Title"] = "Mold Management",
                    ["MoldManagement.AddNewMold"] = "Add New Mold",
                    ["MoldManagement.AddMold"] = "Add Mold",
                    ["MoldManagement.ExistingMolds"] = "Existing Molds",
                    ["MoldManagement.MoldName"] = "Mold Name",
                    ["MoldManagement.MoldCode"] = "Mold Code",
                    ["MoldManagement.MoldDescription"] = "Description",
                    ["MoldManagement.Add"] = "Add",
                    ["MoldManagement.Cancel"] = "Cancel",
                    ["MoldManagement.Edit"] = "Edit",
                    ["MoldManagement.Delete"] = "Delete",
                    ["MoldManagement.Save"] = "Save",
                    ["MoldManagement.NoMolds"] = "No molds added yet",
                    ["MoldManagement.MoldAdded"] = "Mold added successfully",
                    ["MoldManagement.MoldUpdated"] = "Mold updated successfully",
                    ["MoldManagement.MoldDeleted"] = "Mold deleted successfully",
                    ["MoldManagement.EnterMoldName"] = "Please enter mold name",
                    ["MoldManagement.EnterMoldCode"] = "Please enter mold code",
                    ["MoldManagement.DeleteConfirm"] = "Are you sure you want to delete this mold?",
                    ["MoldManagement.ActiveMold"] = "Active Mold",
                    ["MoldManagement.PrintCount"] = "Print Count",
                    ["MoldManagement.Active"] = "Active",
                    ["MoldManagement.Inactive"] = "Inactive",
                    ["MoldManagement.MakeActive"] = "Make Active",
                    ["MoldManagement.MakeInactive"] = "Make Inactive",
                    ["MoldManagement.Delete"] = "Delete",
                    ["MoldManagement.TotalPrints"] = "Total Production",
                    ["MoldManagement.InstallDate"] = "Install",
                    ["MoldManagement.RemoveDate"] = "Remove",
                    ["MoldManagement.MakeInactiveConfirm"] = "Make Mold Inactive Confirmation",
                    ["MoldManagement.MakeInactiveMessage"] = "Are you sure you want to make this mold inactive?",
                    ["MoldManagement.DeleteConfirmTitle"] = "Delete Mold Confirmation",
                    ["MoldManagement.DeleteMessage"] = "Are you sure you want to delete this mold?\n\nThis action cannot be undone!",
                    ["MoldManagement.MadeActive"] = "Mold made active",
                    ["MoldManagement.MadeInactive"] = "Mold made inactive",
                    ["MoldManagement.Deleted"] = "Mold deleted",
                    ["MoldManagement.NotRemoved"] = "Not removed yet",
                    
                    // Batch Status Translations
                    ["BatchStatus.YatayKovada"] = "Horizontal Bucket",
                    ["BatchStatus.DikeyKovada"] = "Vertical Bucket", 
                    ["BatchStatus.BeklemeBunkerinde"] = "Waiting Bunker",
                    ["BatchStatus.Bekleme Bunkerinde"] = "Waiting Bunker",
                    ["BatchStatus.Bekleme Bunkeri"] = "Waiting Bunker",
                    ["BatchStatus.Mixerde"] = "In Mixer",
                    ["BatchStatus.TartimKovasinda"] = "Weighing Bucket",
                    ["BatchStatus.Tartƒ±m Kovasƒ±nda"] = "Weighing Bucket",
                    ["BatchStatus.Har√ß Hazƒ±r"] = "Ready for Transport",
                    ["BatchStatus.Tamamlandƒ±"] = "Completed",
                    ["BatchStatus.tamamlandi"] = "Completed",
                    ["BatchStatus.yatay_kovada"] = "Horizontal Bucket",
                    ["BatchStatus.dikey_kovada"] = "Vertical Bucket",
                    ["BatchStatus.bekleme_bunkerinde"] = "Waiting Bunker",
                    ["BatchStatus.mixerde"] = "In Mixer",
                    
                    // √úretim Bilgileri
                    ["Production.ShiftProduction"] = "Vardiya ƒ∞√ßi √úretim",
                    ["Production.NoProduction"] = "Hen√ºz √ºretim yok",
                    ["Production.PalletCount"] = "0 palet",
                    
                    // √úretim Raporlama
                    ["ProductionReporting.Title"] = "√úretim Takip",
                    ["ProductionReporting.PlcStatus"] = "PLC Durumu",
                    ["ProductionReporting.PlcTest"] = "PLC Test",
                    ["ProductionReporting.ShiftManagement"] = "Vardiya Y√∂netimi",
                    ["ProductionReporting.StartShift"] = "Vardiyayƒ± Ba≈ülat",
                    ["ProductionReporting.EndShift"] = "Vardiyayƒ± Bitir",
                    ["ProductionReporting.ShiftHistory"] = "Vardiya Ge√ßmi≈üi",
                    ["ProductionReporting.ProductionInfo"] = "√úretim Bilgileri",
                    ["ProductionReporting.TotalProduction"] = "Toplam √úretim",
                    ["ProductionReporting.DailyPalletProduction"] = "G√ºnl√ºk Palet √úretimi",
                    ["ProductionReporting.ShiftStart"] = "Vardiya Ba≈ülangƒ±√ß",
                    ["ProductionReporting.ProductionStart"] = "√úretim Ba≈ülangƒ±√ß",
                    ["ProductionReporting.NotStarted"] = "Ba≈ülatƒ±lmadƒ±",
                    ["ProductionReporting.Pallet"] = "palet",
                    ["ProductionReporting.Logs"] = "Loglar",
                    ["ProductionReporting.PlcConnected"] = "PLC: Baƒülƒ±",
                    ["ProductionReporting.PlcDisconnected"] = "PLC: Baƒülantƒ± Yok",
                    ["ProductionReporting.PlcError"] = "PLC: Hata",
                    ["ProductionReporting.PlcChecking"] = "PLC: Baƒülantƒ± Kontrol Ediliyor...",
                    ["ProductionReporting.SimulationMode"] = "‚ö†Ô∏è PLC baƒülantƒ±sƒ± yok - Sim√ºlasyon modunda √ßalƒ±≈üƒ±yor",
                    ["ProductionReporting.RealDataMode"] = "‚úÖ Ger√ßek PLC verisi alƒ±nƒ±yor",
                    
                    // Beton Santrali Raporlama
                    ["ConcreteReporting.Title"] = "Beton Santrali Raporlama",
                    ["ConcreteReporting.Mixer1Reporting"] = "üèóÔ∏è Mixer1 Raporlama",
                    ["ConcreteReporting.Mixer2Reporting"] = "üèóÔ∏è Mixer2 Raporlama",
                    ["ConcreteReporting.Mixer1Reports"] = "üìä Mixer1 Raporlar",
                    ["ConcreteReporting.Mixer2Reports"] = "üìä Mixer2 Raporlar",
                    ["ConcreteReporting.CementSilos"] = "üè≠ √áimento Silolarƒ±",
                    ["ConcreteReporting.CementSilosTitle"] = "üè≠ √áimento Silolarƒ±",
                    ["ConcreteReporting.Refresh"] = "üîÑ Yenile",
                    ["ConcreteReporting.Silo"] = "Silo",
                    ["ConcreteReporting.Level"] = "Seviye",
                    ["ConcreteReporting.LastRefill"] = "Son Doldurma",
                    ["ConcreteReporting.Amount"] = "Miktar",
                    ["ConcreteReporting.Details"] = "üìä Detay",
                    ["ConcreteReporting.Refill"] = "üîÑ Doldur",
                    ["ConcreteReporting.InfoText"] = "Beton santrali raporlama sistemi. Mixer1 ve Mixer2 i√ßin tek sayfadan i≈ülem yapƒ±n.",
                    ["ConcreteReporting.SiloRefreshed"] = "√áimento silolarƒ± yenilendi.",
                    ["ConcreteReporting.SiloRefreshError"] = "√áimento silolarƒ± yenileme hatasƒ±",
                    ["ConcreteReporting.SiloLoadError"] = "√áimento silolarƒ± y√ºkleme hatasƒ±",
                    ["ConcreteReporting.SiloDetailsError"] = "Silo detaylarƒ± a√ßma hatasƒ±",
                    ["ConcreteReporting.SiloRefillError"] = "Silo doldurma hatasƒ±",
                    ["ConcreteReporting.SiloRefilled"] = "Silo dolduruldu"
                },
                ["en-US"] = new Dictionary<string, string>
                {
                    ["MainWindow.Title"] = "Production Tracking System",
                    ["MainWindow.ShiftManagement"] = "Shift Management",
                    ["MainWindow.ProductionInfo"] = "Production Information",
                    ["MainWindow.StartShift"] = "Start Shift",
                    ["MainWindow.EndShift"] = "End Shift",
                    ["MainWindow.ShiftHistory"] = "Shift History",
                    ["MainWindow.PlcTest"] = "üîß PLC Test Page",
                    ["MainWindow.TotalProduction"] = "Total Production",
                    ["MainWindow.Logs"] = "Logs",
                    ["MainWindow.DailyPalletProduction"] = "Daily Pallet Production",
                    ["MainWindow.ShiftStart"] = "Shift Start",
                    ["MainWindow.ProductionStart"] = "Production Start",
                    ["MainWindow.NotStarted"] = "Not Started",
                    ["MainWindow.Pallet"] = "pallet",
                    ["MainWindow.Add"] = "Add",
                    ["MainWindow.Delete"] = "Delete",
                    ["MainWindow.PlcStatus"] = "PLC: Checking Connection...",
                    ["MainWindow.PlcConnected"] = "PLC: Connected",
                    ["MainWindow.PlcDisconnected"] = "PLC: Disconnected",
                    ["MainWindow.PlcError"] = "PLC: Error",
                    
                    // Mold Management
                    ["MoldManagement.Title"] = "Mold Management",
                    ["MoldManagement.AddNewMold"] = "Add New Mold",
                    ["MoldManagement.AddMold"] = "Add Mold",
                    ["MoldManagement.ExistingMolds"] = "Existing Molds",
                    ["MoldManagement.MoldName"] = "Mold Name",
                    ["MoldManagement.MoldCode"] = "Mold Code",
                    ["MoldManagement.MoldDescription"] = "Description",
                    ["MoldManagement.Add"] = "Add",
                    ["MoldManagement.Cancel"] = "Cancel",
                    ["MoldManagement.Edit"] = "Edit",
                    ["MoldManagement.Delete"] = "Delete",
                    ["MoldManagement.Save"] = "Save",
                    ["MoldManagement.NoMolds"] = "No molds added yet",
                    ["MoldManagement.MoldAdded"] = "Mold added successfully",
                    ["MoldManagement.MoldUpdated"] = "Mold updated successfully",
                    ["MoldManagement.MoldDeleted"] = "Mold deleted successfully",
                    ["MoldManagement.EnterMoldName"] = "Please enter mold name",
                    ["MoldManagement.EnterMoldCode"] = "Please enter mold code",
                    ["MoldManagement.DeleteConfirm"] = "Are you sure you want to delete this mold?",
                    ["MoldManagement.ActiveMold"] = "Active Mold",
                    ["MoldManagement.PrintCount"] = "Print Count",
                    ["MoldManagement.Active"] = "Active",
                    ["MoldManagement.Inactive"] = "Inactive",
                    ["MoldManagement.MakeActive"] = "Make Active",
                    ["MoldManagement.MakeInactive"] = "Make Inactive",
                    ["MoldManagement.Delete"] = "Delete",
                    ["MoldManagement.TotalPrints"] = "Total Production",
                    ["MoldManagement.InstallDate"] = "Install",
                    ["MoldManagement.RemoveDate"] = "Remove",
                    ["MoldManagement.MakeInactiveConfirm"] = "Make Mold Inactive Confirmation",
                    ["MoldManagement.MakeInactiveMessage"] = "Are you sure you want to make this mold inactive?",
                    ["MoldManagement.DeleteConfirmTitle"] = "Delete Mold Confirmation",
                    ["MoldManagement.DeleteMessage"] = "Are you sure you want to delete this mold?\n\nThis action cannot be undone!",
                    ["MoldManagement.MadeActive"] = "Mold made active",
                    ["MoldManagement.MadeInactive"] = "Mold made inactive",
                    ["MoldManagement.Deleted"] = "Mold deleted",
                    ["MoldManagement.NotRemoved"] = "Not removed yet",
                    
                    // Batch Status Translations
                    ["BatchStatus.YatayKovada"] = "Horizontal Bucket",
                    ["BatchStatus.DikeyKovada"] = "Vertical Bucket", 
                    ["BatchStatus.BeklemeBunkerinde"] = "Waiting Bunker",
                    ["BatchStatus.Bekleme Bunkerinde"] = "Waiting Bunker",
                    ["BatchStatus.Bekleme Bunkeri"] = "Waiting Bunker",
                    ["BatchStatus.Mixerde"] = "In Mixer",
                    ["BatchStatus.TartimKovasinda"] = "Weighing Bucket",
                    ["BatchStatus.Tartƒ±m Kovasƒ±nda"] = "Weighing Bucket",
                    ["BatchStatus.Har√ß Hazƒ±r"] = "Ready for Transport",
                    ["BatchStatus.Tamamlandƒ±"] = "Completed",
                    ["BatchStatus.tamamlandi"] = "Completed",
                    ["BatchStatus.yatay_kovada"] = "Horizontal Bucket",
                    ["BatchStatus.dikey_kovada"] = "Vertical Bucket",
                    ["BatchStatus.bekleme_bunkerinde"] = "Waiting Bunker",
                    ["BatchStatus.mixerde"] = "In Mixer",
                    
                    // Production Information
                    ["Production.ShiftProduction"] = "Shift Production",
                    ["Production.NoProduction"] = "No production yet",
                    ["Production.PalletCount"] = "0 pallets",
                    
                    // Production Reporting
                    ["ProductionReporting.Title"] = "Production Tracking",
                    ["ProductionReporting.PlcStatus"] = "PLC Status",
                    ["ProductionReporting.PlcTest"] = "PLC Test",
                    ["ProductionReporting.ShiftManagement"] = "Shift Management",
                    ["ProductionReporting.StartShift"] = "Start Shift",
                    ["ProductionReporting.EndShift"] = "End Shift",
                    ["ProductionReporting.ShiftHistory"] = "Shift History",
                    ["ProductionReporting.ProductionInfo"] = "Production Information",
                    ["ProductionReporting.TotalProduction"] = "Total Production",
                    ["ProductionReporting.DailyPalletProduction"] = "Daily Pallet Production",
                    ["ProductionReporting.ShiftStart"] = "Shift Start",
                    ["ProductionReporting.ProductionStart"] = "Production Start",
                    ["ProductionReporting.NotStarted"] = "Not Started",
                    ["ProductionReporting.Pallet"] = "pallet",
                    ["ProductionReporting.Logs"] = "Logs",
                    ["ProductionReporting.PlcConnected"] = "PLC: Connected",
                    ["ProductionReporting.PlcDisconnected"] = "PLC: Disconnected",
                    ["ProductionReporting.PlcError"] = "PLC: Error",
                    ["ProductionReporting.PlcChecking"] = "PLC: Checking Connection...",
                    ["ProductionReporting.SimulationMode"] = "‚ö†Ô∏è No PLC connection - Running in simulation mode",
                    ["ProductionReporting.RealDataMode"] = "‚úÖ Receiving real PLC data",
                    
                    // Concrete Plant Reporting
                    ["ConcreteReporting.Title"] = "Concrete Plant Reporting",
                    ["ConcreteReporting.Mixer1Reporting"] = "üèóÔ∏è Mixer1 Reporting",
                    ["ConcreteReporting.Mixer2Reporting"] = "üèóÔ∏è Mixer2 Reporting",
                    ["ConcreteReporting.Mixer1Reports"] = "üìä Mixer1 Reports",
                    ["ConcreteReporting.Mixer2Reports"] = "üìä Mixer2 Reports",
                    ["ConcreteReporting.Mixer2Simulation"] = "üéÆ Mixer2 Simulation",
                    ["ConcreteReporting.CementSilos"] = "üè≠ Cement Silos",
                    ["ConcreteReporting.CementSilosTitle"] = "üè≠ Cement Silos",
                    ["ConcreteReporting.Refresh"] = "üîÑ Refresh",
                    ["ConcreteReporting.Silo"] = "Silo",
                    ["ConcreteReporting.Level"] = "Level",
                    ["ConcreteReporting.LastRefill"] = "Last Refill",
                    ["ConcreteReporting.Amount"] = "Amount",
                    ["ConcreteReporting.Details"] = "üìä Details",
                    ["ConcreteReporting.Refill"] = "üîÑ Refill",
                    ["ConcreteReporting.InfoText"] = "Concrete plant reporting system. Process operations for Mixer1 and Mixer2 from a single page.",
                    ["ConcreteReporting.SiloRefreshed"] = "Cement silos refreshed.",
                    ["ConcreteReporting.SiloRefreshError"] = "Cement silos refresh error",
                    ["ConcreteReporting.SiloLoadError"] = "Cement silos loading error",
                    ["ConcreteReporting.SiloDetailsError"] = "Silo details opening error",
                    ["ConcreteReporting.SiloRefillError"] = "Silo refill error",
                    ["ConcreteReporting.SiloRefilled"] = "Silo refilled"
                }
            };
            
            System.Diagnostics.Debug.WriteLine("[LocalizationService] √áeviriler y√ºklendi");
        }
        
        /// <summary>
        /// Kaynak dosyasƒ±nƒ± y√ºkle
        /// </summary>
        private void LoadResourceManager()
        {
            try
            {
                System.Diagnostics.Debug.WriteLine("[LocalizationService] ResourceManager y√ºkleniyor...");
                _resourceManager = new ResourceManager("takip.Resources.Strings", typeof(LocalizationService).Assembly);
                System.Diagnostics.Debug.WriteLine("[LocalizationService] ResourceManager ba≈üarƒ±yla y√ºklendi");
                
                // Test i√ßin bir deƒüer almayƒ± dene
                var testValue = _resourceManager.GetString("MainWindow.Title", new CultureInfo("tr-TR"));
                System.Diagnostics.Debug.WriteLine($"[LocalizationService] Test deƒüeri (tr-TR): '{testValue}'");
                
                var testValueEn = _resourceManager.GetString("MainWindow.Title", new CultureInfo("en-US"));
                System.Diagnostics.Debug.WriteLine($"[LocalizationService] Test deƒüeri (en-US): '{testValueEn}'");
            }
            catch (Exception ex)
            {
                System.Diagnostics.Debug.WriteLine($"[LocalizationService] Kaynak dosyasƒ± y√ºkleme hatasƒ±: {ex.Message}");
                System.Diagnostics.Debug.WriteLine($"[LocalizationService] Stack trace: {ex.StackTrace}");
            }
        }
        
        /// <summary>
        /// Dil deƒüi≈ütir
        /// </summary>
        /// <param name="culture">Yeni dil k√ºlt√ºr√º</param>
        public void ChangeLanguage(CultureInfo culture)
        {
            if (!SupportedCultures.Contains(culture))
            {
                System.Diagnostics.Debug.WriteLine($"[LocalizationService] Desteklenmeyen dil: {culture.Name}");
                return;
            }
            
            _currentCulture = culture;
            CultureInfo.CurrentUICulture = culture;
            CultureInfo.CurrentCulture = culture;
            
            // WPF'in dil ayarlarƒ±nƒ± g√ºncelle
            FrameworkElement.LanguageProperty.OverrideMetadata(
                typeof(FrameworkElement),
                new FrameworkPropertyMetadata(System.Windows.Markup.XmlLanguage.GetLanguage(culture.Name)));
            
            // Dil deƒüi≈üikliƒüi olayƒ±nƒ± tetikle
            LanguageChanged?.Invoke(this, culture);
            
            System.Diagnostics.Debug.WriteLine($"[LocalizationService] Dil deƒüi≈ütirildi: {culture.DisplayName}");
        }
        
        /// <summary>
        /// Dil deƒüi≈ütir (dil kodu ile)
        /// </summary>
        /// <param name="languageCode">Dil kodu (tr-TR, en-US)</param>
        public void ChangeLanguage(string languageCode)
        {
            try
            {
                var culture = new CultureInfo(languageCode);
                ChangeLanguage(culture);
            }
            catch (Exception ex)
            {
                System.Diagnostics.Debug.WriteLine($"[LocalizationService] Ge√ßersiz dil kodu: {languageCode}, Hata: {ex.Message}");
            }
        }
        
        /// <summary>
        /// Metin al (yerelle≈ütirilmi≈ü)
        /// </summary>
        /// <param name="key">Metin anahtarƒ±</param>
        /// <param name="defaultValue">Varsayƒ±lan deƒüer</param>
        /// <returns>Yerelle≈ütirilmi≈ü metin</returns>
        public string GetString(string key, string? defaultValue = null)
        {
            try
            {
                System.Diagnostics.Debug.WriteLine($"[LocalizationService] GetString √ßaƒürƒ±ldƒ± - Key: {key}, Culture: {_currentCulture.Name}");
                
                // √ñnce Dictionary'den dene
                if (_translations.ContainsKey(_currentCulture.Name) && 
                    _translations[_currentCulture.Name].ContainsKey(key))
                {
                    var value = _translations[_currentCulture.Name][key];
                    System.Diagnostics.Debug.WriteLine($"[LocalizationService] Dictionary'den alƒ±nan deƒüer: '{value}'");
                    return value;
                }
                
                // Dictionary'de yoksa ResourceManager'dan dene
                if (_resourceManager != null)
                {
                    var value = _resourceManager.GetString(key, _currentCulture);
                    System.Diagnostics.Debug.WriteLine($"[LocalizationService] ResourceManager'dan alƒ±nan deƒüer: '{value}'");
                    
                    if (!string.IsNullOrEmpty(value))
                    {
                        return value;
                    }
                }
                else
                {
                    System.Diagnostics.Debug.WriteLine("[LocalizationService] ResourceManager null!");
                }
                
                // Kaynak bulunamazsa varsayƒ±lan deƒüeri d√∂nd√ºr
                System.Diagnostics.Debug.WriteLine($"[LocalizationService] Varsayƒ±lan deƒüer d√∂nd√ºr√ºl√ºyor: {defaultValue ?? key}");
                return defaultValue ?? key;
            }
            catch (Exception ex)
            {
                System.Diagnostics.Debug.WriteLine($"[LocalizationService] Metin alma hatasƒ± - Key: {key}, Hata: {ex.Message}");
                return defaultValue ?? key;
            }
        }
        
        /// <summary>
        /// Dil ayarlarƒ±nƒ± kaydet
        /// </summary>
        public void SaveLanguageSettings()
        {
            try
            {
                var settingsPath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "language_settings.json");
                var settings = new { Language = _currentCulture.Name };
                var json = System.Text.Json.JsonSerializer.Serialize(settings, new System.Text.Json.JsonSerializerOptions { WriteIndented = true });
                File.WriteAllText(settingsPath, json);
                
                System.Diagnostics.Debug.WriteLine($"[LocalizationService] Dil ayarlarƒ± kaydedildi: {_currentCulture.Name}");
            }
            catch (Exception ex)
            {
                System.Diagnostics.Debug.WriteLine($"[LocalizationService] Dil ayarlarƒ± kaydetme hatasƒ±: {ex.Message}");
            }
        }
        
        /// <summary>
        /// Dil ayarlarƒ±nƒ± y√ºkle
        /// </summary>
        public void LoadLanguageSettings()
        {
            try
            {
                var settingsPath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "language_settings.json");
                if (File.Exists(settingsPath))
                {
                    var json = File.ReadAllText(settingsPath);
                    var settings = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, string>>(json);
                    
                    if (settings != null && settings.ContainsKey("Language"))
                    {
                        var savedLanguage = settings["Language"];
                        ChangeLanguage(savedLanguage);
                        System.Diagnostics.Debug.WriteLine($"[LocalizationService] Dil ayarlarƒ± y√ºklendi: {savedLanguage}");
                    }
                }
            }
            catch (Exception ex)
            {
                System.Diagnostics.Debug.WriteLine($"[LocalizationService] Dil ayarlarƒ± y√ºkleme hatasƒ±: {ex.Message}");
            }
        }
        
        /// <summary>
        /// Dil y√ºkle (LoadLanguageSettings i√ßin alias)
        /// </summary>
        public void LoadLanguage()
        {
            LoadLanguageSettings();
        }
        
        /// <summary>
        /// Dil adƒ±nƒ± al (g√∂r√ºnt√ºleme i√ßin)
        /// </summary>
        /// <param name="culture">K√ºlt√ºr</param>
        /// <returns>Dil adƒ±</returns>
        public string GetLanguageDisplayName(CultureInfo culture)
        {
            return culture.Name switch
            {
                "tr-TR" => "T√ºrk√ße",
                "en-US" => "English",
                _ => culture.DisplayName
            };
        }
        
        /// <summary>
        /// Batch status'unu √ßevir (UI'da ƒ∞ngilizce g√∂ster)
        /// </summary>
        /// <param name="status">T√ºrk√ße status</param>
        /// <returns>ƒ∞ngilizce status</returns>
        public string TranslateBatchStatus(string status)
        {
            if (string.IsNullOrEmpty(status))
                return status;
                
            var key = $"BatchStatus.{status}";
            return GetString(key) ?? status; // √áeviri bulunamazsa orijinal status'u d√∂nd√ºr
        }
    }
}
